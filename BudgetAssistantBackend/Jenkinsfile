
node {
    Map<String, String> buildParameters = new HashMap<String, String>()
    buildParameters.put('imageRepository', 'lednev/budget-assistant.api')

    def dockerImage

    sh('export GIT_SSL_NO_VERIFY=1')
    stage('Clone repository') {
        checkout scm
    }

    stage('Collect variables') {
        gitCommit = sh(script: 'git describe --always', returnStdout: true)
        buildParameters.put('gitCommit', gitCommit.trim())
    }

    stage('Check environment') {
        switch (env.BRANCH_NAME) {
            case 'develop':
                buildParameters.put('taskDefinition', 'development')
                break

            case 'main':
                buildParameters.put('taskDefinition', 'production')
                break
        }
        // -${buildParameters.get('gitCommit')
        String imageFullName = "${buildParameters.get('imageRepository')}:${ buildParameters.get('taskDefinition')}}"
        buildParameters.put('imageFullName', imageFullName)
    }

    stage('Build service image') {
        dockerImage = docker.build(buildParameters.get('imageFullName'), ' -f ./BudgetAssistantBackend/BudgetAssistant.API/Dockerfile ./BudgetAssistantBackend/')
    }

    stage('Push service image to repository') {
        docker.withRegistry('https://hub.docker.com/', 'DockerHub') {
            dockerImage.push()
        }
    }
    }
